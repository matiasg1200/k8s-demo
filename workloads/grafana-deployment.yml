apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
spec:
  resources:
    requests:
      storage: 100Mi
  accessModes:
    - ReadWriteOnce
---    
apiVersion: v1
kind: ConfigMap
metadata:
   name: grafana-datasource
data:
  thanos-ds.yaml: | 
    apiVersion: 1
    
    datasources:
      - name: prometheus
        type: prometheus
        access: proxy
        orgId: 1
        url: http://prometheus-service:9090
        version: 1
        editable: false
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-deployment
  labels:
    app: prometheus-thanos-grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      name: grafana
  template:
    metadata:
      labels:
        name: grafana
        app: prometheus-thanos-grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:9.1.0
        ports:
        - name: http-grafana
          containerPort: 3000
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /robots.txt
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 2
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 3000
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 1000m
            memory: 1Gi
        securityContext: 
          runAsUser: 0 
          runAsGroup: 0 
          readOnlyRootFilesystem: false    
        volumeMounts:
          - name: datasource
            mountPath: /etc/grafana/provisioning/datasources
          - name: grafana-storage
            mountPath: /var/lib/grafana  
      volumes:
      - name: datasource
        configMap:
          name: grafana-datasource
      - name: grafana-storage 
        persistentVolumeClaim:
          claimName: grafana-pvc
