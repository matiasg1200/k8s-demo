apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
data:
  prometheus.yml: |
    global:
      scrape_interval: 10s
      scrape_timeout: 8s
      external_labels:
        cluster: dev
    scrape_configs:
      - job_name: 'telegraf-pods'
        honor_labels: true
        honor_timestamps: true
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_name]
            action: keep
            regex: telegraf-deployment.*

            
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: prometheus-sts
  labels:
    app: prometheus-thanos-poc
spec:
  selector:
    matchLabels:
      name: prometheus
  replicas: 1
  template:
    metadata:
      labels:
        name: prometheus
        app: prometheus-thanos-poc
    spec:
      serviceAccount: prometheus-sa
      terminationGracePeriodSeconds: 10
      containers:
      - name: prometheus
        image: prom/prometheus:v2.40.5
        ports:
        - name: web
          containerPort: 9090
        resources:
          requests:
            cpu: 250m
            memory: 100Mi
        livenessProbe:
          httpGet:
            path: /
            port: 9090
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 20
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /
            port: 9090
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 20
          successThreshold: 3
        args:
          - '--config.file=/etc/prometheus/prometheus.yml'
          - '--storage.tsdb.path=/prometheus/data'
          - '--storage.tsdb.retention.time=3h'
          - '--web.enable-lifecycle'
          - '--storage.tsdb.no-lockfile'
          - '--storage.tsdb.max-block-duration=120m' 
          - '--storage.tsdb.min-block-duration=120m' 
        securityContext: 
          runAsUser: 0 
          runAsGroup: 0 
          readOnlyRootFilesystem: false
        volumeMounts:
        - name: prometheus-storage
          mountPath: /prometheus/data
        - name: prometheus-config
          mountPath: /etc/prometheus
      volumes:
      - name: prometheus-config
        configMap: 
          name: prometheus-config
  volumeClaimTemplates:
  - metadata:
      name: prometheus-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 100Mi